---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: dns-storage
  namespace: stephbuorg
  labels:
    app: network-dns
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: unbound-dns-storage
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  capacity:
    storage: 500Ki
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: dns-storage
  local:
    path: /opt/unbound
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: k3os.io/mode
          operator: In
          values:
          - local
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dnsmasq-dns-storage
  namespace: stephbuorg
  labels:
    app: network-dns  
spec:
  capacity:
    storage: 500Ki
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: dns-storage
  local:
    path: /opt/dnsmasq
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: k3os.io/mode
          operator: In
          values:
          - local
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-dns-storage
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  capacity:
    storage: 2Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: dns-storage
  local:
    path: /opt/pihole
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: k3os.io/mode
          operator: In
          values:
          - local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dns-storage-claim
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  storageClassName: dns-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dnsmasq-dns-storage-claim
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  storageClassName: dns-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Ki
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unbound-dns-storage-claim
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  storageClassName: dns-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Ki
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: network-dns-deployment
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: network-dns
  template:
    metadata:
      name: homedns
      namespace: stephbuorg
      labels:
        app: network-dns
        run: pihole
    spec:
      hostname: network-dns
      containers:
      - name: unbound
        image: mvance/unbound:latest
        ports:
        - name: dnsoverudp
          containerPort: 5353
          protocol: UDP
        - name: dnsovertcp
          containerPort: 5353
          protocol: TCP
        imagePullPolicy: Always
        volumeMounts:
        - name: varlog
          mountPath: /var/log       
        - name: unbound-dns-storage
          mountPath: /opt/unbound/etc/unbound/
      - name: pihole
        env:
        - name: TZ
          value: "America/Los_Angeles"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-admin
              key: password
        image: pihole/pihole:latest
        ports:
        - name: dnsoverhttp
          containerPort: 53
          protocol: TCP
        - name: dnsoverudp
          containerPort: 53
          protocol: UDP
        - name: dnsmasq
          containerPort: 67
          protocol: UDP
        - name: adminwebhttp
          containerPort: 80
          protocol: TCP
        - name: adminwebhttps
          containerPort: 443
          protocol: TCP      
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add: ["NET_ADMIN", "SYS_TIME"]
        volumeMounts:
        - name: pihole-dns-storage
          mountPath: /etc/pihole/
        - name: dnsmasq-dns-storage
          mountPath: /etc/dnsmasq.d/
      volumes:
      - name: varlog
        emptyDir:
          medium: Memory
          sizeLimit: "128Mi"
      - name: unbound-dns-storage
        persistentVolumeClaim:
          claimName: unbound-dns-storage-claim
      - name: pihole-dns-storage
        persistentVolumeClaim:
          claimName: pihole-dns-storage-claim
      - name: dnsmasq-dns-storage
        persistentVolumeClaim:
          claimName: dnsmasq-dns-storage-claim  
      dnsPolicy: ClusterFirstWithHostNet
      priority: 0
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: stephbuorg
  labels:
    app: network-dns
    run: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - port: 53
    targetPort: 53
    protocol: UDP
    name: piholednsoverudp
  - port: 5353
    targetPort: 5353
    protocol: UDP
    name: unbounddnsoverudp
  selector:
    run: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-adminweb
  namespace: stephbuorg  
  labels:
    app: network-dns
    run: pihole
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - port: 8081
    targetPort: 80
    protocol: TCP
    name: adminwebhttp
  selector:
    run: pihole
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: "ingress-pihole-adminweb"
  namespace: stephbuorg
  labels:
    app: network-dns
spec:
  rules:
    - host: pihole.internal.stephbu.org
      http:
        paths:
          - path: /admin
            backend:
              serviceName: pihole-adminweb
              servicePort: 8081
